DEBUG_FLAG=-g
GCC_EQCHECKER_FLAGS= -fno-inline -fno-inline-functions -fno-inline-small-functions -fno-indirect-inlining -fno-partial-inlining -fno-inline-functions-called-once -fno-early-inlining -fno-whole-program -fno-peel-loops -fipa-sra -fno-strict-overflow -fno-builtin -fno-unit-at-a-time -fno-strict-aliasing -fno-optimize-sibling-calls -fno-stack-protector -std=c11 -undef
CLANG_EQCHECKER_FLAGS= -fno-inline -fno-inline-functions -fno-builtin -fno-strict-aliasing -fno-optimize-sibling-calls -fno-stack-protector -std=c11 -undef
COMMON_FLAGS=$(DEBUG_FLAG)
COPTIMIZE_O0=-O0 $(COMMON_FLAGS)
COPTIMIZE_O0_soft_float=-O0 $(COMMON_FLAGS) -msoft-float
COPTIMIZE_O0_hard_float=-O0 $(COMMON_FLAGS) -mhard-float
COPTIMIZE_O2=-O2 $(COMMON_FLAGS)
COPTIMIZE_O2_soft_float=-O2 $(COMMON_FLAGS) -msoft-float
COPTIMIZE_O2_hard_float=-O2 $(COMMON_FLAGS) -mhard-float
COPTIMIZE_O2U=-O2 -funroll-all-loops $(COMMON_FLAGS)
COPTIMIZE_O2u=-O2 -funroll-loops $(COMMON_FLAGS)
COPTIMIZE_O2ofp=-O2 -fomit-frame-pointer $(COMMON_FLAGS)
COPTIMIZE_O3=-O3 $(COMMON_FLAGS)
COPTIMIZE_O3_soft_float=-O3 $(COMMON_FLAGS) -msoft-float
COPTIMIZE_O3_hard_float=-O3 $(COMMON_FLAGS) -mhard-float
COPTIMIZE_O3U=-O3 -funroll-all-loops $(COMMON_FLAGS)
COPTIMIZE_O3u=-O3 -funroll-loops $(COMMON_FLAGS)
COPTIMIZE_O3ofp=-O3 -fomit-frame-pointer $(COMMON_FLAGS)
COPTIMIZE_CCOMP_O0_soft_float=-O0 -g -fno-fpu -fnone -fvararg-calls -funprototyped -fstruct-return
COPTIMIZE_CCOMP_O2_soft_float=-O2 -g -fno-fpu -fnone -fvararg-calls -funprototyped -fstruct-return
CPORTABILITY_i386=
CPORTABILITY_x64=-DSPEC_CPU_LP64

FC_I386=/usr/bin/gfortran -m32 -static
FC_X64=/usr/bin/gfortran -static

EXTRA_LIBS_soft_float=$(I386_SOFT_FLOAT_LIB)

default=default=gcc-i386-O0=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O0) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O0) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)

default=default=gcc-i386-O0-soft-float=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)


default=default=gcc-i386-O2=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O2) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O2) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)

default=default=gcc-i386-O2U=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O2U) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
notes0085=  Baseline C++: g++ -O2
CXXOPTIMIZE	= $(COPTIMIZE_O2U) $(GCC_EQCHECKER_FLAGS)
feedback=0

default=default=gcc-i386-O2u=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O2u) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O2u) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)

default=default=gcc-i386-O2ofp=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O2ofp)
CXXOPTIMIZE	= $(COPTIMIZE_O2ofp)
FC              = $(FC_I386)
feedback=0

default=default=gcc-i386-O2-soft-float=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc-i386-O3-soft-float=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc-i386-O3=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O3)
CXXOPTIMIZE	= $(COPTIMIZE_O3)
FC              = $(FC_I386)

default=default=gcc-i386-O3U=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O3U)
CXXOPTIMIZE	= $(COPTIMIZE_O3U)
FC              = $(FC_I386)

default=default=gcc-i386-O3u=default:
notes0080=  Baseline C:   gcc -O3 -funroll-all-loops
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O3u)
CXXOPTIMIZE	= $(COPTIMIZE_O3u)
FC              = $(FC_I386)

default=default=gcc-i386-O3ofp=default:
CC		= $(CC_GCC_I386)
CXX		= $(CXX_GCC_I386)
COPTIMIZE	= $(COPTIMIZE_O3ofp)
CXXOPTIMIZE	= $(COPTIMIZE_O3ofp)
FC              = $(FC_I386)
feedback=0

default=default=clang-i386-O0=default:
CC		= $(CC_CLANG_I386)
COPTIMIZE	= $(COPTIMIZE_O0)
CXX		= $(CXX_CLANG_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O0)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=clang-i386-O2=default:
CC		= $(CC_CLANG_I386)
COPTIMIZE	= $(COPTIMIZE_O2) $(CLANG_EQCHECKER_FLAGS)
CXX		= $(CXX_CLANG_I386) 
CXXOPTIMIZE	= $(COPTIMIZE_O2) $(CLANG_EQCHECKER_FLAGS)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=clang-i386-O2U=default:
CC		= $(CC_CLANG_I386)
COPTIMIZE	= $(COPTIMIZE_O2U)
CXX		= $(CXX_CLANG_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O2U)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=clang-i386-O2u=default:
CC		= $(CC_CLANG_I386)
COPTIMIZE	= $(COPTIMIZE_O2u)
CXX		= $(CXX_CLANG_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O2u)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=clang-i386-O2ofp=default:
CC		= $(CC_CLANG_I386)
COPTIMIZE	= $(COPTIMIZE_O2ofp)
CXX		= $(CXX_CLANG_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O2ofp)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=clang-i386-O3=default:
CC		= $(CC_CLANG_I386)
COPTIMIZE	= $(COPTIMIZE_O3)
CXX		= $(CXX_CLANG_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O3)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=clang-i386-O3U=default:
CC		= $(CC_CLANG_I386)
COPTIMIZE	= $(COPTIMIZE_O3U)
CXX		= $(CXX_CLANG_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O3U)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=clang-i386-O3u=default:
CC		= $(CC_CLANG_I386)
COPTIMIZE	= $(COPTIMIZE_O3u)
CXX		= $(CXX_CLANG_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O3u)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=clang-i386-O3ofp=default:
CC		= $(CC_CLANG_I386)
COPTIMIZE	= $(COPTIMIZE_O3ofp)
CXX		= $(CXX_CLANG_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O3ofp)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=icc-i386-O0=default:
CC		= $(CC_ICC_I386)
COPTIMIZE	= $(COPTIMIZE_O0)
CXX		= $(CXX_ICC_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O0)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=icc-i386-O2=default:
CC		= $(CC_ICC_I386)
COPTIMIZE	= $(COPTIMIZE_O2)
CXX		= $(CXX_ICC_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O2)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=icc-i386-O2U=default:
CC		= $(CC_ICC_I386)
COPTIMIZE	= $(COPTIMIZE_O2U)
CXX		= $(CXX_ICC_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O2U)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=icc-i386-O2u=default:
CC		= $(CC_ICC_I386)
COPTIMIZE	= $(COPTIMIZE_O2u)
CXX		= $(CXX_ICC_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O2u)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=icc-i386-O3=default:
CC		= $(CC_ICC_I386)
COPTIMIZE	= $(COPTIMIZE_O3)
CXX		= $(CXX_ICC_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O3)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=icc-i386-O3U=default:
CC		= $(CC_ICC_I386)
COPTIMIZE	= $(COPTIMIZE_O3U)
CXX		= $(CXX_ICC_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O3U)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=icc-i386-O3u=default:
CC		= $(CC_ICC_I386)
COPTIMIZE	= $(COPTIMIZE_O3u)
CXX		= $(CXX_ICC_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O3u)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=icc-i386-O3ofp=default:
CC		= $(CC_ICC_I386)
COPTIMIZE	= $(COPTIMIZE_O3ofp)
CXX		= $(CXX_ICC_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O3ofp)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)



default=default=crosstool-i386-O0=default:
CC		= $(CC_CROSSTOOL_I386)
COPTIMIZE	= $(COPTIMIZE_O0)
CXX		= $(CXX_CROSSTOOL_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O0)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=crosstool-i386-O2=default:
CC		= $(CC_CROSSTOOL_I386)
COPTIMIZE	= $(COPTIMIZE_O2)
CXX		= $(CXX_CROSSTOOL_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O2)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=crosstool-i386-O2U=default:
CC		= $(CC_CROSSTOOL_I386)
COPTIMIZE	= $(COPTIMIZE_O2U)
CXX		= $(CXX_CROSSTOOL_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O2U)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=crosstool-i386-O2u=default:
CC		= $(CC_CROSSTOOL_I386)
COPTIMIZE	= $(COPTIMIZE_O2u)
CXX		= $(CXX_CROSSTOOL_I386)
CXXOPTIMIZE	= $(COPTIMIZE_O2u)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_I386)

default=default=crosstool-ppc-O0=default:
CC		= $(CC_CROSSTOOL_PPC)
CXX		= $(CXX_CROSSTOOL_PPC)
COPTIMIZE	= $(COPTIMIZE_O0)
CXXOPTIMIZE	= $(COPTIMIZE_O0)
feedback=0

default=default=crosstool-ppc-O0-hard-float=default:
CC		= $(CC_CROSSTOOL_PPC)
CXX		= $(CXX_CROSSTOOL_PPC)
COPTIMIZE	= $(COPTIMIZE_O0_hard_float)
CXXOPTIMIZE	= $(COPTIMIZE_O0_hard_float)
feedback=0

default=default=crosstool-ppc-O0-soft-float=default:
CC		= $(CC_CROSSTOOL_PPC)
CXX		= $(CXX_CROSSTOOL_PPC)
COPTIMIZE	= $(COPTIMIZE_O0_soft_float)
CXXOPTIMIZE	= $(COPTIMIZE_O0_soft_float)
feedback=0

default=default=crosstool-ppc-O2=default:
notes0080=  Baseline C:   gcc -O2
CC		= $(CC_CROSSTOOL_PPC)
CXX		= $(CXX_CROSSTOOL_PPC)
COPTIMIZE	= $(COPTIMIZE_O2)
notes0085=  Baseline C++: g++ -O2
CXXOPTIMIZE	= $(COPTIMIZE_O2)
feedback=0

default=default=crosstool-ppc-O2-hard-float=default:
notes0080=  Baseline C:   gcc -O2
CC		= $(CC_CROSSTOOL_PPC)
CXX		= $(CXX_CROSSTOOL_PPC)
COPTIMIZE	= $(COPTIMIZE_O2_hard_float)
notes0085=  Baseline C++: g++ -O2
CXXOPTIMIZE	= $(COPTIMIZE_O2_hard_float)
feedback=0

default=default=crosstool-ppc-O2-soft-float=default:
notes0080=  Baseline C:   gcc -O2
CC		= $(CC_CROSSTOOL_PPC)
CXX		= $(CXX_CROSSTOOL_PPC)
COPTIMIZE	= $(COPTIMIZE_O2_soft_float)
CXXOPTIMIZE	= $(COPTIMIZE_O2_soft_float)

default=default=crosstool-ppc-O3=default:
notes0080=  Baseline C:   gcc -O3
CC		= $(CC_CROSSTOOL_PPC)
CXX		= $(CXX_CROSSTOOL_PPC)
COPTIMIZE	= $(COPTIMIZE_O3)
CXXOPTIMIZE	= $(COPTIMIZE_O3)

default=default=crosstool-ppc-O3U=default:
CC		= $(CC_CROSSTOOL_PPC)
CXX		= $(CXX_CROSSTOOL_PPC)
COPTIMIZE	= $(COPTIMIZE_O3U)
CXXOPTIMIZE	= $(COPTIMIZE_O3U)

default=default=crosstool-ppc-O3u=default:
notes0080=  Baseline C:   gcc -O3 -funroll-all-loops
CC		= $(CC_CROSSTOOL_PPC)
CXX		= $(CXX_CROSSTOOL_PPC)
COPTIMIZE	= $(COPTIMIZE_O3u)
CXXOPTIMIZE	= $(COPTIMIZE_O3u)



default=default=gcc-x64-O0=default:
CC		= $(CC_GCC_X64)
CXX		= $(CXX_GCC_X64)
COPTIMIZE	= $(COPTIMIZE_O0)
notes0085=  Baseline C++: g++ $(COPTIMIZE_O0)
CXXOPTIMIZE	= $(COPTIMIZE_O0)
FC              = $(FC_X64)
feedback=0

default=default=gcc-x64-O0-soft-float=default:
CC		= $(CC_GCC_X64)
CXX		= $(CXX_GCC_X64)
COPTIMIZE	= $(COPTIMIZE_O0_soft_float)
notes0085=  Baseline C++: g++ $(COPTIMIZE_O0)
CXXOPTIMIZE	= $(COPTIMIZE_O0_soft_float)
FC              = $(FC_X64)
feedback=0

default=default=gcc-x64-O2=default:
CC		= $(CC_GCC_X64)
CXX		= $(CXX_GCC_X64)
notes0080=  Baseline C:   gcc -O2
COPTIMIZE	= $(COPTIMIZE_O2)
notes0085=  Baseline C++: g++ -O2
CXXOPTIMIZE	= $(COPTIMIZE_O2)
feedback=0
FC              = $(FC_X64)

default=default=gcc-x64-O2U=default:
CC		= $(CC_GCC_X64)
CXX		= $(CXX_GCC_X64)
COPTIMIZE	= $(COPTIMIZE_O2U)
CXXOPTIMIZE	= $(COPTIMIZE_O2U)
FC              = $(FC_X64)

default=default=gcc-x64-O2u=default:
CC		= $(CC_GCC_X64)
CXX		= $(CXX_GCC_X64)
COPTIMIZE	= $(COPTIMIZE_O2u)
CXXOPTIMIZE	= $(COPTIMIZE_O2u)
FC              = $(FC_X64)

default=default=gcc-x64-O2ofp=default:
CC		= $(CC_GCC_X64)
CXX		= $(CXX_GCC_X64)
COPTIMIZE	= $(COPTIMIZE_O2ofp)
CXXOPTIMIZE	= $(COPTIMIZE_O2ofp)
FC              = $(FC_X64)


default=default=gcc-x64-O3=default:
CC		= $(CC_GCC_X64)
CXX		= $(CXX_GCC_X64)
COPTIMIZE	= $(COPTIMIZE_O3)
CXXOPTIMIZE	= $(COPTIMIZE_O3)
FC              = $(FC_X64)

default=default=gcc-x64-O3U=default:
CC		= $(CC_GCC_X64)
CXX		= $(CXX_GCC_X64)
COPTIMIZE	= $(COPTIMIZE_O3U)
CXXOPTIMIZE	= $(COPTIMIZE_O3U)
FC              = $(FC_X64)

default=default=gcc-x64-O3u=default:
CC		= $(CC_GCC_X64)
CXX		= $(CXX_GCC_X64)
COPTIMIZE	= $(COPTIMIZE_O3u)
CXXOPTIMIZE	= $(COPTIMIZE_O3u)
FC              = $(FC_X64)

default=default=gcc-x64-O3ofp=default:
CC		= $(CC_GCC_X64)
CXX		= $(CXX_GCC_X64)
COPTIMIZE	= $(COPTIMIZE_O3ofp)
CXXOPTIMIZE	= $(COPTIMIZE_O3ofp)
FC              = $(FC_X64)

default=default=clang-x64-O0=default:
CC		= $(CC_CLANG_X64)
COPTIMIZE	= $(COPTIMIZE_O0)
CXX		= $(CXX_CLANG_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O0)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=clang-x64-O2=default:
CC		= $(CC_CLANG_X64)
COPTIMIZE	= $(COPTIMIZE_O2)
CXX		= $(CXX_CLANG_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O2)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=clang-x64-O2U=default:
CC		= $(CC_CLANG_X64)
COPTIMIZE	= $(COPTIMIZE_O2U)
CXX		= $(CXX_CLANG_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O2U)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type

default=default=clang-x64-O2u=default:
CC		= $(CC_CLANG_X64)
COPTIMIZE	= $(COPTIMIZE_O2u)
CXX		= $(CXX_CLANG_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O2u)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=clang-x64-O2ofp=default:
CC		= $(CC_CLANG_X64)
COPTIMIZE	= $(COPTIMIZE_O2ofp)
CXX		= $(CXX_CLANG_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O2ofp)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=clang-x64-O3=default:
CC		= $(CC_CLANG_X64)
COPTIMIZE	= $(COPTIMIZE_O3)
CXX		= $(CXX_CLANG_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O3)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=clang-x64-O3U=default:
CC		= $(CC_CLANG_X64)
COPTIMIZE	= $(COPTIMIZE_O3U)
CXX		= $(CXX_CLANG_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O3U)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=clang-x64-O3u=default:
CC		= $(CC_CLANG_X64)
COPTIMIZE	= $(COPTIMIZE_O3u)
CXX		= $(CXX_CLANG_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O3u)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)



default=default=clang-x64-O3ofp=default:
CC		= $(CC_CLANG_X64)
COPTIMIZE	= $(COPTIMIZE_O3ofp)
CXX		= $(CXX_CLANG_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O3ofp)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)


default=default=icc-x64-O0=default:
CC		= $(CC_ICC_X64)
COPTIMIZE	= $(COPTIMIZE_O0)
CXX		= $(CXX_ICC_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O0)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=icc-x64-O2=default:
CC		= $(CC_ICC_X64)
COPTIMIZE	= $(COPTIMIZE_O2)
CXX		= $(CXX_ICC_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O2)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=icc-x64-O2U=default:
CC		= $(CC_ICC_X64)
COPTIMIZE	= $(COPTIMIZE_O2U)
CXX		= $(CXX_ICC_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O2U)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=icc-x64-O2u=default:
CC		= $(CC_ICC_X64)
COPTIMIZE	= $(COPTIMIZE_O2u)
CXX		= $(CXX_ICC_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O2u)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=icc-x64-O2ofp=default:
CC		= $(CC_ICC_X64)
COPTIMIZE	= $(COPTIMIZE_O2ofp)
CXX		= $(CXX_ICC_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O2ofp)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)



default=default=icc-x64-O3=default:
CC		= $(CC_ICC_X64)
COPTIMIZE	= $(COPTIMIZE_O3)
CXX		= $(CXX_ICC_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O3)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=icc-x64-O3U=default:
CC		= $(CC_ICC_X64)
COPTIMIZE	= $(COPTIMIZE_O3U)
CXX		= $(CXX_ICC_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O3U)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)

default=default=icc-x64-O3u=default:
CC		= $(CC_ICC_X64)
COPTIMIZE	= $(COPTIMIZE_O3u)
CXX		= $(CXX_ICC_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O3u)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)



default=default=icc-x64-O3ofp=default:
CC		= $(CC_ICC_X64)
COPTIMIZE	= $(COPTIMIZE_O3ofp)
CXX		= $(CXX_ICC_X64)
CXXOPTIMIZE	= $(COPTIMIZE_O3ofp)
CPORTABILITY    = -fpermissive -std=gnu89 -Wno-return-type
FC              = $(FC_X64)



default=default=gcc44-i386-O0-soft-float=default:
CC		= $(CC_GCC44_I386)
CXX		= $(CXX_GCC44_I386)
COPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc44-i386-O2-soft-float=default:
CC		= $(CC_GCC44_I386)
CXX		= $(CXX_GCC44_I386)
COPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc44-i386-O3-soft-float=default:
CC		= $(CC_GCC44_I386)
CXX		= $(CXX_GCC44_I386)
COPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc46-i386-O0-soft-float=default:
CC		= $(CC_GCC46_I386)
CXX		= $(CXX_GCC46_I386)
COPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc46-i386-O2-soft-float=default:
CC		= $(CC_GCC46_I386)
CXX		= $(CXX_GCC46_I386)
COPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc46-i386-O3-soft-float=default:
CC		= $(CC_GCC46_I386)
CXX		= $(CXX_GCC46_I386)
COPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc47-i386-O0-soft-float=default:
CC		= $(CC_GCC47_I386)
CXX		= $(CXX_GCC47_I386)
COPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc47-i386-O2-soft-float=default:
CC		= $(CC_GCC47_I386)
CXX		= $(CXX_GCC47_I386)
COPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc47-i386-O3-soft-float=default:
CC		= $(CC_GCC47_I386)
CXX		= $(CXX_GCC47_I386)
COPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)


default=default=gcc48-i386-O0-soft-float=default:
CC		= $(CC_GCC48_I386)
CXX		= $(CXX_GCC48_I386)
COPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc48-i386-O2-soft-float=default:
CC		= $(CC_GCC48_I386)
CXX		= $(CXX_GCC48_I386)
COPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=gcc48-i386-O3-soft-float=default:
CC		= $(CC_GCC48_I386)
CXX		= $(CXX_GCC48_I386)
COPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(GCC_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(GCC_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)


default=default=clang35-i386-O0-soft-float=default:
CC		= $(CC_CLANG35_I386)
CXX		= $(CXX_CLANG35_I386)
COPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(CLANG_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(CLANG_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=clang35-i386-O2-soft-float=default:
CC		= $(CC_CLANG35_I386)
CXX		= $(CXX_CLANG35_I386)
COPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(CLANG_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(CLANG_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=clang35-i386-O3-soft-float=default:
CC		= $(CC_CLANG35_I386)
CXX		= $(CXX_CLANG35_I386)
COPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(CLANG_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O3_soft_float) $(CLANG_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)


default=default=clang36-i386-O0-soft-float=default:
CC		= $(CC_CLANG36_I386)
CXX		= $(CXX_CLANG36_I386)
COPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(CLANG_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O0_soft_float) $(CLANG_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=clang36-i386-O2-soft-float=default:
CC		= $(CC_CLANG36_I386)
CXX		= $(CXX_CLANG36_I386)
COPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(CLANG_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O2_soft_float) $(CLANG_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=clang36-i386-O3-soft-float=default:
CC		= $(CC_CLANG36_I386)
CXX		= $(CXX_CLANG36_I386)
COPTIMIZE	= $(COPTIMIZE_O3_soft_float)  $(CLANG_EQCHECKER_FLAGS)
CXXOPTIMIZE	= $(COPTIMIZE_O3_soft_float)  $(CLANG_EQCHECKER_FLAGS)
FC              = $(FC_I386)
EXTRA_LIBS      = $(EXTRA_LIBS_soft_float)

default=default=ccomp-i386-O0-soft-float=default:
CC		= $(CC_CCOMP_I386)
CXX		= 
COPTIMIZE	= $(COPTIMIZE_CCOMP_O0_soft_float)
CXXOPTIMIZE	= $(COPTIMIZE_CCOMP_O0_soft_float)
FC              = 
EXTRA_LIBS      = 

default=default=ccomp-i386-O2-soft-float=default:
CC		= $(CC_CCOMP_I386)
CXX		= 
COPTIMIZE	= $(COPTIMIZE_CCOMP_O2_soft_float)
CXXOPTIMIZE	= $(COPTIMIZE_CCOMP_O2_soft_float)
FC              = 
EXTRA_LIBS      = 
